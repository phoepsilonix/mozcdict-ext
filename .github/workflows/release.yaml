name: Release

on:
  create:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
      env:
        SCCACHE_GHA_ENABLED: "true"
        RUSTC_WRAPPER: "sccache"
        # SCCACHE_RECACHE: 1 # Uncomment this to clear 
    steps:
      - uses: actions/checkout@v4
      - name: install build tools (Linux)
        id: startup
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y strip xz
      - name: rust install
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
          sh rustup-init.sh -y
      - name: Mount rustup cache
        uses: actions/cache@v4
        with:
          path: "/home/runner/.rustup"
          key: rustup-${{ runner.os }}-mozc-${{ steps.startup.outputs.container_name }}
          restore-keys: rustup-${{ runner.os }}-mozc-${{ steps.startup.outputs.container_name }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
        with:
          version: "v0.8.0"
      - name: Install mold linker
        uses: rui314/setup-mold@staging
        with:
          mold-version: 2.31.0
          make-default: true
      - name: added dictionary
        run: |
          cd sudachi
          . "$HOME/.cargo/env"
          rustup update stable
          rustup target list --installed | grep $(rustc -vV | sed -e 's|host: ||' -e 's|-gnu||p' -n) | grep musl && TARGET=$(rustup target list --installed | grep $(rustc -vV | sed -e 's|host: ||' -e 's|-gnu||p' -n)|grep musl|head -n1) || TARGET=$(rustup target list --installed | grep $(rustc -vV | sed -e 's|host: ||' -e 's|-gnu||p' -n)|grep -v musl|head -n1)
          cargo build --release --target $TARGET
          cp target/$TARGET/release/dict-to-mozc dict-to-mozc
          strip --strip-all dict-to-mozc
          tar -cf dict-to-mozc.tar ./dict-to-mozc
          xz -9 -e dict-to-mozc.tar
          mkdir -p ../release
          mv dict-to-mozc.tar.xz ../release/
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'release/*'
          token: ${{ secrets.GITHUB_TOKEN }}

